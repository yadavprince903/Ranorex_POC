///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyCRM.Recordings.Company.SN_002
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VerifyLabelText recording.
    /// </summary>
    [TestModule("52a63fda-865b-4508-88ae-a8dec16f31d4", ModuleType.Recording, 1)]
    public partial class VerifyLabelText : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::MyCRM.MyCRMRepository repository.
        /// </summary>
        public static global::MyCRM.MyCRMRepository repo = global::MyCRM.MyCRMRepository.Instance;

        static VerifyLabelText instance = new VerifyLabelText();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VerifyLabelText()
        {
            AdressLine1 = "";
            AddressLine2 = "";
            City = "";
            State = "";
            Zip = "";
            Main = "";
            Other = "";
            Comment = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VerifyLabelText Instance
        {
            get { return instance; }
        }

#region Variables

        string _AdressLine1;

        /// <summary>
        /// Gets or sets the value of variable AdressLine1.
        /// </summary>
        [TestVariable("44e5d779-a371-49ab-ba89-55442a408e68")]
        public string AdressLine1
        {
            get { return _AdressLine1; }
            set { _AdressLine1 = value; }
        }

        string _AddressLine2;

        /// <summary>
        /// Gets or sets the value of variable AddressLine2.
        /// </summary>
        [TestVariable("b4c02137-7a5e-4d8d-89f2-a972d847a35a")]
        public string AddressLine2
        {
            get { return _AddressLine2; }
            set { _AddressLine2 = value; }
        }

        string _City;

        /// <summary>
        /// Gets or sets the value of variable City.
        /// </summary>
        [TestVariable("6ae00447-09e7-4eea-8d12-99502a675e97")]
        public string City
        {
            get { return _City; }
            set { _City = value; }
        }

        string _State;

        /// <summary>
        /// Gets or sets the value of variable State.
        /// </summary>
        [TestVariable("49d4a669-0c2e-4eb1-84ab-b95142dab2fd")]
        public string State
        {
            get { return _State; }
            set { _State = value; }
        }

        string _Zip;

        /// <summary>
        /// Gets or sets the value of variable Zip.
        /// </summary>
        [TestVariable("062336ae-4002-48c6-b9b1-eaa36300b96a")]
        public string Zip
        {
            get { return _Zip; }
            set { _Zip = value; }
        }

        string _Main;

        /// <summary>
        /// Gets or sets the value of variable Main.
        /// </summary>
        [TestVariable("5ebced3e-4085-4a1e-b061-37cab27410bd")]
        public string Main
        {
            get { return _Main; }
            set { _Main = value; }
        }

        string _Other;

        /// <summary>
        /// Gets or sets the value of variable Other.
        /// </summary>
        [TestVariable("612265d6-497f-477b-91c5-47960ce0c7c5")]
        public string Other
        {
            get { return _Other; }
            set { _Other = value; }
        }

        string _Comment;

        /// <summary>
        /// Gets or sets the value of variable Comment.
        /// </summary>
        [TestVariable("8c9e61e3-05a8-46a8-a500-ffc8b9bcca2e")]
        public string Comment
        {
            get { return _Comment; }
            set { _Comment = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyCRM.Navigation.Company' at Center.", repo.MyCRM.Navigation.CompanyInfo, new RecordItemIndex(0));
            repo.MyCRM.Navigation.Company.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AdressLine1) on item 'MyCRM.Company.TxtAddressLine1'.", repo.MyCRM.Company.TxtAddressLine1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtAddressLine1Info, "Text", AdressLine1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AddressLine2) on item 'MyCRM.Company.TxtAddressLine2'.", repo.MyCRM.Company.TxtAddressLine2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtAddressLine2Info, "Text", AddressLine2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$City) on item 'MyCRM.Company.TxtCity'.", repo.MyCRM.Company.TxtCityInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtCityInfo, "Text", City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Zip) on item 'MyCRM.Company.TxtZip'.", repo.MyCRM.Company.TxtZipInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtZipInfo, "Text", Zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Main) on item 'MyCRM.Company.TxtMain'.", repo.MyCRM.Company.TxtMainInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtMainInfo, "Text", Main);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Other) on item 'MyCRM.Company.TxtOther'.", repo.MyCRM.Company.TxtOtherInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MyCRM.Company.TxtOtherInfo, "Text", Other);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Comment' with focus on 'MyCRM.Company.CommentBox'.", repo.MyCRM.Company.CommentBoxInfo, new RecordItemIndex(7));
            repo.MyCRM.Company.CommentBox.PressKeys(Comment);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Comment) on item 'MyCRM.Company.CommentBox'.", repo.MyCRM.Company.CommentBoxInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MyCRM.Company.CommentBoxInfo, "Text", Comment);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
