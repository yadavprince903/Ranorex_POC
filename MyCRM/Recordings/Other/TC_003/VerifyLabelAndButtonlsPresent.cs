///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyCRM.Recordings.Other.TC_003
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VerifyLabelAndButtonlsPresent recording.
    /// </summary>
    [TestModule("eb444085-dd2f-4026-bdc3-c9925550d49a", ModuleType.Recording, 1)]
    public partial class VerifyLabelAndButtonlsPresent : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::MyCRM.MyCRMRepository repository.
        /// </summary>
        public static global::MyCRM.MyCRMRepository repo = global::MyCRM.MyCRMRepository.Instance;

        static VerifyLabelAndButtonlsPresent instance = new VerifyLabelAndButtonlsPresent();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VerifyLabelAndButtonlsPresent()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VerifyLabelAndButtonlsPresent Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MyCRM.Navigation.Other' at Center.", repo.MyCRM.Navigation.OtherInfo, new RecordItemIndex(0));
            repo.MyCRM.Navigation.Other.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LnkGeneric1'.", repo.MyCRM.Other.LnkGeneric1Info, new RecordItemIndex(1));
            Validate.Exists(repo.MyCRM.Other.LnkGeneric1Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric2'.", repo.MyCRM.Other.LinkGeneric2Info, new RecordItemIndex(2));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric2Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric3'.", repo.MyCRM.Other.LinkGeneric3Info, new RecordItemIndex(3));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric3Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric4'.", repo.MyCRM.Other.LinkGeneric4Info, new RecordItemIndex(4));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric4Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric5'.", repo.MyCRM.Other.LinkGeneric5Info, new RecordItemIndex(5));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric5Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric6'.", repo.MyCRM.Other.LinkGeneric6Info, new RecordItemIndex(6));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric6Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric7'.", repo.MyCRM.Other.LinkGeneric7Info, new RecordItemIndex(7));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric7Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric8'.", repo.MyCRM.Other.LinkGeneric8Info, new RecordItemIndex(8));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric8Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric9'.", repo.MyCRM.Other.LinkGeneric9Info, new RecordItemIndex(9));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric9Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.LinkGeneric10'.", repo.MyCRM.Other.LinkGeneric10Info, new RecordItemIndex(10));
            Validate.Exists(repo.MyCRM.Other.LinkGeneric10Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.Browse'.", repo.MyCRM.Other.BrowseInfo, new RecordItemIndex(11));
            Validate.Exists(repo.MyCRM.Other.BrowseInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MyCRM.Other.Save'.", repo.MyCRM.Other.SaveInfo, new RecordItemIndex(12));
            Validate.Exists(repo.MyCRM.Other.SaveInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
