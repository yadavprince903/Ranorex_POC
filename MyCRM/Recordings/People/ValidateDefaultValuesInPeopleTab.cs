///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyCRM.Recordings.People
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateDefaultValuesInPeopleTab recording.
    /// </summary>
    [TestModule("d3f0273c-6a4b-4c18-bf32-a9fc5af5daa6", ModuleType.Recording, 1)]
    public partial class ValidateDefaultValuesInPeopleTab : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::MyCRM.MyCRMRepository repository.
        /// </summary>
        public static global::MyCRM.MyCRMRepository repo = global::MyCRM.MyCRMRepository.Instance;

        static ValidateDefaultValuesInPeopleTab instance = new ValidateDefaultValuesInPeopleTab();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateDefaultValuesInPeopleTab()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateDefaultValuesInPeopleTab Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Oscar') on item 'MyCRM.People.First'.", repo.MyCRM.People.FirstInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.MyCRM.People.FirstInfo, "Text", "Oscar");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Madisox') on item 'MyCRM.People.Last'.", repo.MyCRM.People.LastInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MyCRM.People.LastInfo, "Text", "Madisox");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'MyCRM.People.Male'.", repo.MyCRM.People.MaleInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MyCRM.People.MaleInfo, "Checked", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'MyCRM.People.Female'.", repo.MyCRM.People.FemaleInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MyCRM.People.FemaleInfo, "Checked", "False");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1049 Park Avenue') on item 'MyCRM.People.Addressline1'.", repo.MyCRM.People.Addressline1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MyCRM.People.Addressline1Info, "Text", "1049 Park Avenue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Apartment 7G') on item 'MyCRM.People.Addressline2'.", repo.MyCRM.People.Addressline2Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MyCRM.People.Addressline2Info, "Text", "Apartment 7G");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='New York') on item 'MyCRM.People.City'.", repo.MyCRM.People.CityInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MyCRM.People.CityInfo, "Text", "New York");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='NY') on item 'MyCRM.People.State'.", repo.MyCRM.People.StateInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MyCRM.People.StateInfo, "Text", "NY");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10028') on item 'MyCRM.People.Zip'.", repo.MyCRM.People.ZipInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MyCRM.People.ZipInfo, "Text", "10028");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='212-770-7000') on item 'MyCRM.People.Home'.", repo.MyCRM.People.HomeInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MyCRM.People.HomeInfo, "Text", "212-770-7000");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='800-201-7575') on item 'MyCRM.People.Work'.", repo.MyCRM.People.WorkInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MyCRM.People.WorkInfo, "Text", "800-201-7575");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='718-860-7100') on item 'MyCRM.People.Mobile'.", repo.MyCRM.People.MobileInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MyCRM.People.MobileInfo, "Text", "718-860-7100");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='jdoe@gmail.com') on item 'MyCRM.People.Personalmail'.", repo.MyCRM.People.PersonalmailInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.MyCRM.People.PersonalmailInfo, "Text", "jdoe@gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='john.doe@fictitious.com') on item 'MyCRM.People.Workmail'.", repo.MyCRM.People.WorkmailInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.MyCRM.People.WorkmailInfo, "Text", "john.doe@fictitious.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (CheckState='Unchecked') on item 'MyCRM.People.Active'.", repo.MyCRM.People.ActiveInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.MyCRM.People.ActiveInfo, "CheckState", "Unchecked");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
